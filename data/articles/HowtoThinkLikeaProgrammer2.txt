 Programmers think that it’s best to jump right into a given programming task immediately, then clean up their work later. If you’re not entirely sure how to go about developing your perfect programming plan, that’s okay. Just start developing the parts you know how to do and fill in the rest later. To think like a programmer, avoid hesitation and doubt and get to work., Programmers think in chunks. For instance, instead of seeing a single undifferentiated project or piece of code, they segregate their work into various sections and subsections. To think like a programmer, find a way to subdivide your tasks and develop a step-by-step process to complete each element of the project.For instance, you might develop a software system by first developing system functions, then developing data entities, then debugging.
 Thinking like a programmer means double-checking what you’ve done. In programmer lingo, this process is known as debugging. Remind yourself upon completion of a task to double-check what you’ve done for errors or mistakes. Run your code through a debugging program, and if you encounter any snags, re-read your code line by line, scanning for errors until you find what the problem is., Don’t rush from project to project without thinking about your experiences. After completing one piece of programming, reflect on what you learned and what you struggled with. Look for opportunities to use the solutions you discovered in one programming challenge in other contexts.Sometimes you can transfer whole chunks of code into other programs or contexts.
Don’t just use your past experiences to sharpen your skills. If you’re a freelance programmer, use what you learned on one project to decide what sort of programming you’re best suited to and what sort of clients you want to work with. You might realize, for instance, that you feel better programming for a nonprofit whose cause you believe in than you do for a random corporation.

