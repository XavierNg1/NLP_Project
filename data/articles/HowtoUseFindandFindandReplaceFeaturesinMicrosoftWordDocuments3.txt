 If you want to work with only a portion of the document, select that portion of the text by dragging over it with your mouse. If you want to work with the entire document, do nothing.
, The "Use wildcards" checkbox is found with the other search options. If you don't see the box, click "More >>" to display the search options.
 Wildcard characters replace 1 or more regular characters in your search text. You can type the character directly or select it from a list by clicking "Special" and selecting it from 1 of the options at the top of the dropdown list. A list of wildcards is given below:


Question mark (?). The question mark wildcard represents a single character. You can type "r?t" to find all 3-letter words that begin with "r" and end with "t," such as "rat," "rot," and "rut."
Asterisk (*). The asterisk wildcard represents a string of 1 or more characters. You can type "r*t" to find all words that begin with "r" and end with "t," such as "rat," "rot," "rut," "rant," "rest," "rivet," "resist," and "restaurant."
Brackets (). The brackets wildcard represents 1 of a possible list of characters. You type the list of characters between the brackets; anything outside the brackets is presumed to be the beginning or ending of the text string. Typing "rt" will find "rat" and "rot," but not "rut." To specify a range of characters, place a hyphen (-) between the first and last character, which must be specified in ascending order. Typing "at" will find "rat," "sat," and "tat."
Braces ({ }). The braces wildcard represents repeated appearances of the character it is placed after. Typing a single number finds that number of occurrences of the character, so that typing "des{2}ert" finds "dessert" but not "desert." Typing a number followed by a comma means to look for at least 1 occurrence of that character, so that typing "des{1,}ert" will find both "desert" and "dessert." Typing a number followed by a comma and then another number defines a range of times the character appears; typing "7{1,3}" will find 7, 77, and 777.
At sign (@). The at sign wildcard represents 1 or more appearances of the character preceding it. Typing "be@t" finds both "bet" and "beet." (This is the same as typing "be{1,}t.")
Less-than sign (<). The less-than sign wildcard represents the beginning of a word. You type this wildcard, followed by a text string in parentheses. Typing "<(out)" will find "outermost" and "outlying," but not "about" or "router."
Greater-than sign (>). The greater-than sign wildcard represents the end of a word. You type this wildcard, followed by a text string in parentheses. Typing ">(end)" will find "bend," "rend," "fiend," "friend," but not "endless" or "tender."
Not sign (!). The not sign wildcard can be used by itself or with other wildcards to indicate that the character or range it precedes is not to be found in the search results. Typing "r!(a)t" will find 3-letter words that begin with "r" and end with "t" other than "rat," such as "rot" and "rut." Typing "at" will find all 3-letter words that do not begin with "r," "s," or "t" but end with "at," such as "bat," "cat, "eat," "fat," "hat," "mat," and "vat."
Backslash (\). The backslash serves 2 purposes. When followed by a number, you can use it to reorder items. For example, you can change the Vietnamese name "Tran Dien" to its American form, "Dien Tran," throughout your document by typing "(Tran) (Dien)" in the "Find what:" field and "\2 \1" in the "Replace with:" field. The other way to use the backslash is to put it in front of any of the wildcard characters to flag Word that you are searching for the punctuation marks instead of using them as wildcard characters.
Parentheses. Use parentheses to group text characters to be operated on by the wildcard, as noted above for the less-than and greater-than sign wildcards and also to note which wildcard should be evaluated first. Typing "<(be)*(ed)>" will find all words that begin with "be" and end with "ed," such as "bedecked," "bejeweled," and "besotted."

,, Follow the last 2 steps as given above in either "Finding Text" or "Replacing Text."

