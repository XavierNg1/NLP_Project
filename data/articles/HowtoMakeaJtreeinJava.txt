,,,, The following example illustrates how to create a tree and handle selections.

The program creates a DefaultMutableTreeNode instance labeled "Options". This is the top node of the tree hierarchy.
Additional tree nodes are then created, and the add() method is called to connect these nodes to the tree. A reference to the top node in the tree is provided as the argument to the JTree constructor.
The tree is then provided as the argument to the JScrollPane constructor. This scroll pane is then added to the content pane.
Next, a label is created and added to the content pane. The tree selection is displayed in this label.
To receive selection events from the tree, a TreeSelectionListener is registered for the tree. Inside the valeChanged() method, the path to the current selection is obtained and displayed. //Demonstrate JTreeimport java.awt.*;import javax.swing.*;import java.awt.event.*;import java.swing.tree.*;/**/public class JTreeDemo extends JApplet{JTree tree;JLabel jlab;public void init() {try {SwingUtilities.invokeAndWait(new Runnable() {public void run() {makeGUI();}});} catch(Exception exc) {System.out.println("Can't create because of"+exc);}}private void makeGUI() {//Create top node of treeDefaultMutableTreeNode top=new DefaultMutableTreeNode("Options");//Create subtree of "A".DefaultMutableTreeNode a=new DefaultMutableTreeNode("A");top.add(a);DefaultMutableTreeNode a1=new DefaultMutableTreeNode("A1");a.add(a1);DefaultMutableTreeNode a2=new DefaultMutableTreeNode("A2");a.add(a2);//Create subtree of "B"DefaultMutableTreeNode b=new DefaultMutableTreeNode("B");top.add(b);DefaultMutableTreeNode b1=new DefaultMutableTreeNode("B1");b.add(b1);DefaultMutableTreeNode b2=new DefaultMutableTreeNode("B2");b.add(b2);//Create the treetree=new JTree(top);//Add the tree to a scroll pane.JScrollPane jsp=new JScrollPane(tree);//Add the scroll pane to the content pane.add(jsp);//Add the label to the content pane.jlab=new JLabel();add(jlab,BorderLayout.SOUTH);//Handle tree selection events.tree.addTreeSelectionListener(new TreeSelectionListener() {public void valueChanged(TreeSelectionEvent tse) {jlab.setText("Selection is "+tse.getPath());}});}}

