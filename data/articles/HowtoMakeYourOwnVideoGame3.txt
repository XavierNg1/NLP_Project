 The engine is the underlying base of the game. It contains a host of development tools that ease the creation of a game. It is much more time-efficient and less complex to create a game using an existing engine than to create a new one from scratch. There are a variety of engines designed for indie developers.


Engines often make it much simpler to manipulate graphics, sound, and AI.
Different engines have different strengths and weaknesses. Some are more suited to 2D graphics, while others are designed for 3D graphics. Some engines require significantly more programming knowledge than others. There are several game development tools that you can use with no previous coding experience. Popular independent development engines include:

GameMaker: Studio – One of the most popular 2D game engines.
Unity – A 3D engine popular for its ease of use and portability.
RPG Maker VX – A scripting engine designed for 2D RPG is the traditional JRPG style.
Unreal Development Kit – A 3D engine that can be adapted to a wide range of uses.
Source – A very popular 3D engine that is consistently updated and modified.
Project Spark - An optimized 3D engine that addresses the average user.
 Depending on the engine you choose, you may be facing a significant amount of programming. Even the most basic engines will require time to understand how to manipulate them. If the programming is beyond your capabilities, you’ll either need to learn it or hire someone.


This will be the beginning of your team-building phase. If you are unable to program, your first hire will need to be a programmer. You can worry about art and sound later; you need to be able to come up with a working prototype before the project can continue
There is a large community of independent developers that you should be networking with. People will join projects for all kinds of different reasons and compensations. This is where having a solid game design document really helps, because it shows that you have a commitment to your idea.
 Once you are familiar with the engine you have chosen, build a prototype of the game. This prototype will serve as a basic test of the core functionality of the game. You don’t need graphics or audio for the prototype, just simple placeholders (like a cube or a stick figure) and a small test area.Test and refine the prototype, again and again, to ensure that it is fun to play. Make note of anything that doesn't work or feel right, and readdress the mechanics involved. If the prototype isn't fun to play, then the final game probably won’t be either.
There will always be features that seemed easy or feasible that just won’t work when it comes time to make the game. Expect the prototype to change multiple times as you tweak what works and what doesn't.
 The most basic functionality of the game is the player interacting with the game through some sort of control input. Use the prototype to ensure that the controls are as perfect as they can possibly be.


Games with poorly-implemented controls will frustrate players. Games with perfectly executed controls will be rewarding to a player’s skill.

