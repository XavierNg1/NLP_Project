 When you begin a large project, you must steel yourself for what often adds up to hours of work. Besides the initial programming process, you will have to painstakingly examine every dash and apostrophe during your debugging process. Programming can be difficult, but by committing yourself at the outset to seeing your project through to the end, you’ll be able to complete it.Push yourself to get your programming right.
Use short mantras or phrases to encourage yourself. For instance, tell yourself, “Failure is not an option” or “I will do what it takes to succeed.”;
, Programmers engage in time-intensive work. To think like a programmer, avoid losing your patience or giving up in despair. Cultivating patience will help you stick to what you’re doing and help you avoid sloppy programming.For instance, when you’re frustrated with your programming or other activity, get up and take a walk. Sometimes getting some fresh air or having even a brief change of scenery can help you decompress and approach your task with renewed energy.
Breathe in and out slowly. Close your eyes and breathe in through your nose for three seconds. Breathe out slowly through your mouth for five seconds.
 Successful programmers will learn to look at a challenging piece of code or a difficult programming project as an opportunity to learn and grow. Instead of allowing yourself to be tortured by a challenge or difficult experience, try to enjoy it.When you’re stuck on a programming challenge, try to think about it as a puzzle to be solved, rather than as an impossible, painful chore.If you’ve done a great job programming something, pause to congratulate yourself and take pride in your work.
 Programming is always done in the service of some larger goal. Software programming is intended to make great software. Computer programming is meant to create a functional computer. But it can be easy to fall into the trap of trying to make your programming so fluid and beautiful that you only stop when it’s perfect, not when it’s usable. Always program with high standards for both function and form, but learn to recognize when you’ve programmed something that is functionally complete.Thinking like a programmer means getting your task or project done, and not necessarily getting it done in the prettiest possible way.
Don’t make great work the enemy of good work.

