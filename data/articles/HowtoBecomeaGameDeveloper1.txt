 Expect employers to value technical know-how most of all. So don’t fret if the cost of tuition for higher education is beyond your means, because a degree isn’t strictly necessary to find employment. At the same time, though, recognize that technical proficiency coupled with a degree will probably make you stand out over other candidates.Whichever route you choose, put all your emphasis on becoming a proficient programmer. Coasting will only leave you ill-equipped for interviews and the job in question.;
, If you decide on college, be wary about specialized degrees in game programming. Expect these to cover all of the many different aspects of game programming in a relatively short amount of time. Favor a major in Computer Science instead if you aren’t already proficient in the subject.Each aspect of game programming takes a lot of time to master. Studying computer science in depth is more likely to equip you with the necessary skills to tackle each one, even if those skills aren’t directly applied to games during the course of your studies.
If you do consider a specialized degree, research the people who are teaching it. Professors who understand the concepts of game programming, but who have never worked in the field themselves, may not be the best people to learn from.
 Whether you go to school or teach yourself, aim to master at least one computer language. Focus on C++ to increase your chances of being hired, since this is used the most often in game programming. Other languages that are helpful include:Actionscript
Assembly
C
Java
Objective-C
Python
Swift

, Remember: the best way to learn how to do something is to actually do it! Once you learn how to code in computer languages, apply your skills. Build a game from the ground up to grow more familiar with the whole process, from start to finish. As you do, you should:Keep it basic. Don’t worry about revolutionizing games as you know it. To make an analogy, write a simple short story, not James Joyce’s Ulysses.
Copy another game if needed. The purpose here is to learn, not to be original. Borrow another game’s concept and build on it if you’re stuck for ideas.
Do everything yourself. Don’t rely on using outside vector/math libraries. Make all aspects a DIY project in order to increase your proficiency.
Finish it! You want to grow familiar with the whole process, so follow through all the way to the end. Don’t abandon it just because you’ve already finished your favorite aspect of programming.
 Remember: as a professional game developer, you’ll be part of a team tasked with specific aspects. So as you learn to code and build your own games, decide on which areas you want to concentrate on when hired. Once you do, continue to work on personal projects and place more attention to these areas.Titles and departments may vary from company to company, but generally programming is divided between: artificial intelligence; animation; audio; build systems; engines; gameplay; networking; physics; rendering; tools; and user interface.

