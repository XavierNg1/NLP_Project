 This is probably the easiest type of game to make, although not everyone is interested in a game without graphics. Most text-based games focus on a story, a puzzle, or an adventure that combines story, exploration, and puzzles. Here are several free options:



Twine is quick and easy to use in your browser.
StoryNexus and Visionaire add more gameplay options and static images.

Inform7 is a more powerful tool with a large community of supporters.;
, GameMaker and Stencyl are good options that work for any genre, and they give you the option to use programming without requiring it. Scratch! is another tool you can use for browser games.
 A 3D game is a much bigger challenge than a 2D game, so be prepared for a long project and a lot of hard work. Spark and Game Guru will save you some of this effort by letting you build the world without programming. If you already have some programming knowledge or want to start learning how to code, try the extremely popular game engine Unity.


If you want to craft your own 3D models instead of using pre-made assets, you'll need 3D modeling software such as 3DS Max, Blender, or Maya.
 Even if you have a programming background, you may want to use one of the engines above for your first game, and you shouldn't feel obligated to try a different approach just because it is more difficult. That said, some people enjoy the extreme level of control they get from building a game from scratch. Ideally, program the game in an Integrated Development Environment such as Eclipse rather than a text editor, so you can put together everything you need in one convenient project.


While you can program a game in almost any language,, learning C++ will give you a powerful tool that has plenty of game-development resources and tutorials online.
 For your first project, making a typical, small example of a genre you like is a fine starting point, such as a platformer or a role-playing game. Before you get started, write down any ideas you have for what the game will be like, and your answers to the following questions:


What is the main component of the game play (the "core" game play)? This could be fighting enemies, solving puzzles, or talking to other characters.
What do you want that game play to look like? For example, fighting enemies can happen with real-time button-pushing or turn-based tactical decisions. Dialogue-heavy games can let the player shape the plot based on his decisions, or they can be more about learning as much as you can about the characters and world.
What is the mood of the game? Is it creepy, cheerful, mysterious, exciting?

, If you're using a game engine or game-making tool for the first time, this is a great time to play around with the tool. Learn how to place backgrounds, objects, and moving characters. If possible, make objects that the player can interact with, or look through the software's ready-made objects and see if they come with built-in interactions.


If you're not sure how to do something, ask about it on the tool's website or search online for help.
Don't worry about lighting effects and other graphical "extras" yet.
 This can involve minor tweaks to the game creation software, or more complex systems being built from the ground up. Here are some examples:


If you're making a platformer, do you want the character to be able to double-jump or perform other "special" movement? Play around with the height the character can jump, and whether you want different responses from a light tap, holding down the key, or choosing from several jumps of different types.
If you're making an action role-playing game or horror game, which weapons does the player start out with? Choose two or three weapons that the player can upgrade to, and test them out. Try to make the choice between weapons interesting. For instance, a weapon can deal more damage, hit more than one enemy, or make enemies weaker. Don't make it the best option for all of these purposes unless it comes with a high cost (a spell that costs more mana, or a weapon that falls apart after one use.)
In a dialogue-based game, do you want the player to choose between dialogue "branches" listed on the screen, or mostly just listen, perform a task elsewhere to unlock more dialogue, and return to hear more? Do you want the player to find out everything in one play-through, or should there be multiple paths and endings?

, Three to five short levels is a good target for your first game, though you always have the option of expanding it afterwards. Keeping the "core game play" design above in mind, make the challenge of each level a little different. You can either make these levels in order, or make them all separate and put them together once you're finished, whichever is easiest for you.


A platformer usually introduces moving platforms or faster enemies.
An action game can introduce swarms of enemies, a single strong enemy, and enemies that are hard to beat without a specific weapon or tactic.
A puzzle game usually sticks with a single type of puzzle, and either just uses more difficult versions each level, or introduces new tools or obstacles that require more thought from the player.
 These are often referred to as "secondary mechanics" or "secondary gameplay loops." By using the core gameplay mechanic, such as jumping, the player advances the secondary gameplay as well, such as stomping on enemies or collecting items. This in turn can lead to longer-term accomplishments and goals, such as reaching the end of the level, saving up money for an upgrades, and eventually beating the game.


As you can tell from the example, you might have included these already without even realizing it. Just make sure the player can quickly figure out that there are goals out there. If the player plays for ten minutes and thinks the whole game is shooting enemies over and over again, she might get bored. If she kills the first enemy and gets a coin, she'll realize that she has a new goal (save up coins for a reward) and that the core gameplay will directly advance her toward it.
 Test every single level many times, and get friends or acquaintances to help you. Try to approach the game in many different ways, including methods you never intended such as ignoring quests and walking straight to the final boss, or trying to beat the game while choosing "bad" weapons or upgrades. This is a long process that can be frustrating, but fixing bugs and making sure the gameplay is fun for all players will be worth it.


Give your play-testers just enough information they need to get started. They should know that they're working with a work in progress, and how to use the basic controls. They don't need to know anything else.Give playtesters feedback forms so you have a record of all the information, and can easily compare and refer to it.This also lets you ask specific questions about parts of the game you are unsure about.
The most helpful playtesters are people who don't know you, and don't feel obligated to compliment your game., While you can find many free game assets through an online search, take some time to adjust anything that looks out of place, or hunt for replacements. Learn pixel art if you want to adjust simple art in your 2D game, or use software such as OpenGL if you're tackling an ambitious 3D project. Add lighting effects that encourage the player to walk through the main pathway of the room, and particle effects that show off cool attacks or add movement to the backgrounds. Add sound effects for walking, attacking, jumping, and anything else that needs it. While there's always opportunities for more tweaks and playtesting, your game is ready to release as soon as the visuals and audio are up to your standards. Congratulations!

